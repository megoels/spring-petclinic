# mysql:
#   image: mysql
#   ports:
#     - "3306:3306"
#   environment:
#     - MYSQL_ROOT_PASSWORD=root
#     - MYSQL_DATABASE=test
#   volumes:
#     - "./conf.d:/etc/mysql/conf.d:ro"

version: '3'
services:
  nginx:
      image: nginx
      restart: always
      env_file:
          - ./cd_pipeline/.env
      environment:
          - NGINX_HOST=${NGINX_HOST}
      ports:
          - "8000:80"
          - "3000:443"
      volumes:
          - "./cd_pipeline/etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
      command: /bin/bash -c "nginx -g 'daemon off;'"
      links:
          - petclinic:petclinic
      #networks:
      #    - front-tier
      #    - back-tier

  # mysql image (we can also build it with https://github.com/spring-projects/spring-petclinic/blob/master/docker-compose.yml)
  mysqldb:
      image: mysql:5.7.8
      container_name: ${MYSQL_HOST}
      restart: always
      env_file:
          - ./cd_pipeline/.env
      environment:
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
          - MYSQL_USER=${MYSQL_USER}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      ports:
          - "3306:3306"
      # if the volume mounted to the job workspace then it can't be deleted by deleteDir because docker create it with root privileges !
      # for example: "./data/db/mysql:/var/lib/mysql" - therefore there's no need for it during the automated job
      volumes:
           # SQL schema initialization according to https://github.com/megoels/spring-petclinic/blob/master/src/main/resources/db/mysql/petclinic_db_setup_mysql.txt
           - "./src/main/resources/db/mysql/data.sql:/var/lib/mysql/data.sql"
           - "./src/main/resources/db/mysql/schema.sql:/var/lib/mysql/schema.sql"
      command: >
           /bin/bash -c "chown mysql:mysql /var/lib/mysql && /etc/init.d/mysql start && mysql -u $MYSQL_USER -p $MYSQL_PASSWORD < /var/lib/mysql/schema.sql && mysql -u $MYSQL_USER -p $MYSQL_PASSWORD < /var/lib/mysql/data.sql"
      #networks:
      #    - back-tier

  petclinic:
      image: petclinic
      container_name: petclinic
      hostname: petclinic
      build:
        #context: .
        context:  ./cd_pipeline
        dockerfile: Dockerfile
      ports:
          - "49001:8080"
      env_file:
          - ./cd_pipeline/.env
      environment:
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
          - MYSQL_USER=${MYSQL_USER}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      #links:
      #    - mysqldb
      depends_on:
          - mysqldb
      #networks:
      #    - back-tier

#networks:
  #front-tier:
  #back-tier:
  